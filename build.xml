<?xml version="1.0"?>
<!--*************************************************************************
Copyright (c) 2004, Colorado School of Mines and others. All rights reserved.
This program and accompanying materials are made available under the terms of
the Common Public License - v1.0, which accompanies this distribution, and is
available at http://www.eclipse.org/legal/cpl-v10.html
*************************************************************************-->
<project name="jtk" default="all" basedir=".">

  <description>
    The Colorado School of Mines Java Tool Kit
  </description>

  <!-- Project directories -->
  <property name="bin" value="bin"/>
  <property name="jar" value="jar"/>
  <property name="lib" value="lib"/>
  <property name="src" value="src"/>
  <property name="build" value="build"/>
  <property name="build.cls" value="${build}/cls"/>
  <property name="build.doc" value="${build}/doc"/>
  <property name="build.jar" value="${build}/jar"/>
  <property name="build.lib" value="${build}/lib"/>
  <property name="build.obj" value="${build}/obj"/>
  <property name="build.src" value="${build}/src"/>
  <property name="obj.jtk" value="${build.obj}/edu/mines/jtk"/>
  <property name="src.jtk" value="${src}/edu/mines/jtk"/>
  <property name="dist" value="dist"/>

  <!-- Other global settings -->
  <property name="title" value="MinesJTK"/>
  <property environment="env"/>
  <path id="classpath">
    <fileset dir="${jar}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <!-- Determine operating system -->
  <target name="os-init">
    <condition property="linux">
      <os family="unix"/>
    </condition>
    <condition property="windows">
      <os family="windows"/>
    </condition>
  </target>

  <!-- Initialize -->
  <target name="init" depends="os-init">
    <tstamp/>
    <mkdir dir="${build}"/>
    <mkdir dir="${build.cls}"/>
    <mkdir dir="${build.doc}"/>
    <mkdir dir="${build.jar}"/>
    <mkdir dir="${build.lib}"/>
    <mkdir dir="${build.obj}"/>
    <mkdir dir="${build.src}"/>
  </target>

  <!-- Compile Java -->
  <target name="compile-java" depends="init,copy-linux,copy-windows">
    <javac srcdir="${build.src}" destdir="${build.cls}"
      compiler="javac1.5"
      debug="on" 
      deprecation="on">
      <compilerarg value="-Xlint:unchecked"/>
      <classpath refid="classpath"/>
    </javac>
    <javac srcdir="${src}" destdir="${build.cls}" 
      compiler="javac1.5"
      debug="on" 
      deprecation="on">
      <compilerarg value="-Xlint:unchecked"/>
      <classpath refid="classpath"/>
      <exclude name="edu/mines/jtk/opengl/linuxgtk/**"/>
      <exclude name="edu/mines/jtk/opengl/win32/**"/>
      <exclude name="**/old/*"/>
      <exclude name="**/new/*"/>
    </javac>
  </target>
  <target name="copy-linux" depends="init" if="linux">
    <copy file="${src}/edu/mines/jtk/opengl/linuxgtk/SwtHooks.java"
      todir="${build.src}/edu/mines/jtk/opengl"/>
  </target>
  <target name="copy-windows" depends="init" if="windows">
    <copy file="${src}/edu/mines/jtk/opengl/win32/SwtHooks.java"
      todir="${build.src}/edu/mines/jtk/opengl"/>
  </target>

  <!-- Build Java archive -->
  <target name="jar" depends="compile-java,copy-resources"
      description="build Java archive">
    <jar jarfile="${build.jar}/edu_mines_jtk.jar" basedir="${build.cls}"/>
  </target>
  <target name="copy-resources">
    <copy todir="${build.cls}">
      <fileset dir="${src}">
        <include name="**/resources/*"/>
      </fileset>
    </copy>
  </target>

  <!-- Build JNI libraries -->
  <target name="jni" depends="os-init,jni-init,jni-linux,jni-windows"
      description="build JNI libraries (compile and link C++)">
  </target>
  <target name="jni-init" depends="compile-java">
    <taskdef name="jnicpp" 
        classname="edu.mines.jtk.ant.Jnicpp"
        classpath="${build.cls}"/>
  </target>

  <!-- Build JNI libraries for Linux -->
  <target name="jni-linux" if="linux">
    <property name="jdk.home" value="${env.JDK_HOME}"/>
    <property name="jdk.include" value="${jdk.home}/include"/>
    <property name="jre.home" value="${jdk.home}/jre"/>
    <property name="jre.lib" value="${jre.home}/lib/i386"/>
    <jnicpp 
        srcdir="${src.jtk}/bench" 
        objdir="${obj.jtk}/bench"
        jnidir="${build.lib}" 
        jniname="edu_mines_jtk_bench">
      <incarg arg="-I${jdk.include}"/>
      <incarg arg="-I${jdk.include}/linux"/>
      <libarg arg="-L/usr/X11R6/lib"/>
      <libarg arg="-lGL"/>
      <libarg arg="-lGLU"/>
      <libarg arg="-L${jre.lib}"/>
      <libarg arg="-ljawt"/>
    </jnicpp>
    <jnicpp 
        srcdir="${src.jtk}/opengl" 
        objdir="${obj.jtk}/opengl"
        jnidir="${build.lib}" 
        jniname="edu_mines_jtk_opengl">
      <incarg arg="-I${jdk.include}"/>
      <incarg arg="-I${jdk.include}/linux"/>
      <libarg arg="-L/usr/X11R6/lib"/>
      <libarg arg="-lGL"/>
      <libarg arg="-lGLU"/>
      <libarg arg="-L${jre.lib}"/>
      <libarg arg="-ljawt"/>
    </jnicpp>
  </target>

  <!-- Build JNI libraries for Windows -->
  <target name="jni-windows" if="windows">
    <property name="vc.home" value="${env.VC_HOME}"/>
    <property name="sdk.home" value="${env.SDK_HOME}"/>
    <property name="jdk.home" value="${env.JDK_HOME}"/>
    <property name="vc.include" value="${vc.home}\include"/>
    <property name="sdk.include" value="${sdk.home}\include"/>
    <property name="jdk.include" value="${jdk.home}\include"/>
    <jnicpp 
        srcdir="${src.jtk}/bench" 
        objdir="${obj.jtk}/bench"
        jnidir="${build.lib}" 
        jniname="edu_mines_jtk_bench">
      <incarg arg="/I${jdk.include}"/>
      <incarg arg="/I${jdk.include}\win32"/>
      <incarg arg="/I${vc.include}"/>
      <incarg arg="/I${sdk.include}"/>
      <libarg arg="opengl32.lib"/>
      <libarg arg="jawt.lib"/>
    </jnicpp>
    <jnicpp 
        srcdir="${src.jtk}/opengl" 
        objdir="${obj.jtk}/opengl"
        jnidir="${build.lib}" 
        jniname="edu_mines_jtk_opengl">
      <incarg arg="/I${jdk.include}"/>
      <incarg arg="/I${jdk.include}\win32"/>
      <incarg arg="/I${vc.include}"/>
      <incarg arg="/I${sdk.include}"/>
      <libarg arg="opengl32.lib"/>
      <libarg arg="glu32.lib"/>
      <libarg arg="gdi32.lib"/>
      <libarg arg="jawt.lib"/>
    </jnicpp>
  </target>

  <!--Build javadocs -->
  <target name="doc" depends="init" description="build javadocs">
    <javadoc 
      classpathref="classpath"
      destdir="${build.doc}/api" 
      author="true"
      version="true"
      use="true"
      windowtitle="${title}">
      <packageset dir="src" defaultexcludes="yes">
        <include name="edu/mines/jtk/**"/>
        <exclude name="edu/mines/jtk/**/new"/>
        <exclude name="edu/mines/jtk/**/old"/>
      </packageset>
    </javadoc>
  </target>

  <!-- Build everything (except javadocs) -->
  <target name="all" depends="jar,jni"
      description="build everything"/>

  <!-- Build distribution -->
  <target name="dist" depends="dist-init,dist-linux,dist-windows"/>
  <target name="dist-init" depends="all,doc">
    <tstamp/>
    <delete dir="${dist}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="${dist}/bin"/>
    <mkdir dir="${dist}/doc"/>
    <mkdir dir="${dist}/jar"/>
    <mkdir dir="${dist}/lib"/>
    <mkdir dir="${dist}/src"/>
    <copy todir="${dist}" file="license.txt"/>
    <copy todir="${dist}" file="readme.txt"/>
    <copy todir="${dist}/doc">
      <fileset dir="${build.doc}"/>
    </copy>
    <copy todir="${dist}/jar">
      <fileset dir="${build.jar}"/>
      <fileset dir="${jar}" includes="junit.jar"/>
    </copy>
    <copy todir="${dist}/lib">
      <fileset dir="${build.lib}"/>
    </copy>
    <copy todir="${dist}/src">
      <fileset dir="${src}">
        <exclude name="edu/mines/jtk/**/new/"/>
        <exclude name="edu/mines/jtk/**/old/"/>
      </fileset>
    </copy>
  </target>
  <target name="dist-linux" depends="all,doc" if="linux">
    <copy todir="${dist}/bin">
      <fileset dir="${bin}" includes="javarun.sh"/>
    </copy>
    <copy todir="${dist}/lib">
      <fileset dir="${lib}/linux/x86"/>
    </copy>
    <copy todir="${dist}/jar">
      <fileset dir="${jar}/linux/x86"/>
    </copy>
    <tar destfile="${dist}/${title}_${DSTAMP}_${TSTAMP}.tar.gz"
         compression="gzip">
      <tarfileset dir="${dist}" prefix="${title}"/>
    </tar>
  </target>
  <target name="dist-windows" depends="all,doc" if="windows">
    <copy todir="${dist}/bin">
      <fileset dir="${bin}" includes="javarun.bat"/>
    </copy>
    <copy todir="${dist}/lib">
      <fileset dir="${lib}/windows/x86"/>
    </copy>
    <copy todir="${dist}/jar">
      <fileset dir="${jar}/windows/x86"/>
    </copy>
    <zip destfile="${dist}/${title}_${DSTAMP}_${TSTAMP}.zip">
      <zipfileset dir="${dist}" prefix="${title}"/>
    </zip>
  </target>

  <!-- Clean jar -->
  <target name="clean-jar"
      description="delete all products of jar build">
    <delete dir="${build.cls}"/>
    <delete dir="${build.jar}"/>
  </target>

  <!-- Clean jni -->
  <target name="clean-jni"
      description="delete all products of jni build">
    <delete dir="${build.lib}"/>
    <delete dir="${build.obj}"/>
  </target>

  <!-- Clean build -->
  <target name="clean-build"
      description="delete all products of build, not including dist">
    <delete dir="${build}"/>
  </target>

  <!-- Clean dist -->
  <target name="clean-dist"
      description="delete all products of dist build">
    <delete dir="${dist}"/>
  </target>

  <!-- Cleanup -->
  <target name="clean"
      description="delete all products of build, including dist">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

</project>
